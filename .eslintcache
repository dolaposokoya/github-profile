[{"/home/dolexy/Desktop/myprojects/github-profile/src/index.js":"1","/home/dolexy/Desktop/myprojects/github-profile/src/Components/App.js":"2","/home/dolexy/Desktop/myprojects/github-profile/src/Components/Search/Search.js":"3","/home/dolexy/Desktop/myprojects/github-profile/src/Components/SearchResult/SearchResult.js":"4","/home/dolexy/Desktop/myprojects/github-profile/src/Components/UserView/UserView.js":"5","/home/dolexy/Desktop/myprojects/github-profile/src/Components/Modal/Modal.js":"6"},{"size":187,"mtime":1608810862379,"results":"7","hashOfConfig":"8"},{"size":707,"mtime":1608901695647,"results":"9","hashOfConfig":"8"},{"size":4943,"mtime":1608907940927,"results":"10","hashOfConfig":"8"},{"size":2690,"mtime":1608907644301,"results":"11","hashOfConfig":"8"},{"size":2939,"mtime":1608908081484,"results":"12","hashOfConfig":"8"},{"size":333,"mtime":1608907976277,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1w32rh6",{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/dolexy/Desktop/myprojects/github-profile/src/index.js",[],"/home/dolexy/Desktop/myprojects/github-profile/src/Components/App.js",[],"/home/dolexy/Desktop/myprojects/github-profile/src/Components/Search/Search.js",[],"/home/dolexy/Desktop/myprojects/github-profile/src/Components/SearchResult/SearchResult.js",["26"],"/home/dolexy/Desktop/myprojects/github-profile/src/Components/UserView/UserView.js",["27","28","29","30"],"/home/dolexy/Desktop/myprojects/github-profile/src/Components/Modal/Modal.js",[],{"ruleId":"31","severity":1,"message":"32","line":10,"column":12,"nodeType":"33","messageId":"34","endLine":10,"endColumn":16},{"ruleId":"31","severity":1,"message":"35","line":6,"column":13,"nodeType":"33","messageId":"34","endLine":6,"endColumn":25},{"ruleId":"31","severity":1,"message":"36","line":6,"column":27,"nodeType":"33","messageId":"34","endLine":6,"endColumn":38},{"ruleId":"37","severity":1,"message":"38","line":14,"column":15,"nodeType":"39","endLine":20,"endColumn":6},{"ruleId":"37","severity":1,"message":"40","line":20,"column":8,"nodeType":"41","endLine":20,"endColumn":17,"suggestions":"42"},"no-unused-vars","'repo' is assigned a value but never used.","Identifier","unusedVar","'resourceType' is assigned a value but never used.","'userDeatils' is assigned a value but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'users'. Either include it or remove the dependency array.","ArrayExpression",["43"],{"desc":"44","fix":"45"},"Update the dependencies array to be: [message, users]",{"range":"46","text":"47"},[580,589],"[message, users]"]