[{"D:\\My Project\\github-profile\\src\\index.js":"1","D:\\My Project\\github-profile\\src\\Components\\UserView\\UserView.js":"2","D:\\My Project\\github-profile\\src\\Action\\StoreUserAction.js":"3","D:\\My Project\\github-profile\\src\\Components\\SearchResult\\SearchResult.js":"4","D:\\My Project\\github-profile\\src\\Components\\Modal\\Modal.js":"5","D:\\My Project\\github-profile\\src\\Reducer\\GetUserReducer.js":"6","D:\\My Project\\github-profile\\src\\Action\\ActionTypes.js":"7","D:\\My Project\\github-profile\\src\\Action\\GetUserAction.js":"8","D:\\My Project\\github-profile\\src\\Components\\Search\\Search.js":"9"},{"size":309,"mtime":1609249912731,"results":"10","hashOfConfig":"11"},{"size":3653,"mtime":1609253201775,"results":"12","hashOfConfig":"11"},{"size":1108,"mtime":1609253022756,"results":"13","hashOfConfig":"11"},{"size":3395,"mtime":1609253007956,"results":"14","hashOfConfig":"11"},{"size":344,"mtime":1609249912720,"results":"15","hashOfConfig":"11"},{"size":411,"mtime":1609249912731,"results":"16","hashOfConfig":"11"},{"size":248,"mtime":1609249912720,"results":"17","hashOfConfig":"11"},{"size":762,"mtime":1609251765166,"results":"18","hashOfConfig":"11"},{"size":5155,"mtime":1609254126840,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1snlybr",{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\My Project\\github-profile\\src\\index.js",[],["40","41"],"D:\\My Project\\github-profile\\src\\Components\\UserView\\UserView.js",["42"],"D:\\My Project\\github-profile\\src\\Action\\StoreUserAction.js",[],"D:\\My Project\\github-profile\\src\\Components\\SearchResult\\SearchResult.js",["43"],"import React, { useState, useEffect } from 'react';\r\nimport { Card, Button, Image } from 'react-bootstrap'\r\nimport Modal from \"../Modal/Modal\";\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux';\r\nimport { getUserAction } from '../../Action/GetUserAction'\r\nimport { storeUserAction } from '../../Action/StoreUserAction'\r\n\r\nfunction SearchResult(props) {\r\n\r\n    const [iconType, setIconType] = useState('')\r\n    const [alertType, setAlertType] = useState('')\r\n    const [message, setMessage] = useState('')\r\n    const [action, setAction] = useState('Add User')\r\n\r\n\r\n    const { result } = props\r\n\r\n    useEffect(() => {\r\n        checkUser()\r\n        return () => {\r\n            checkUser()\r\n        }\r\n    }, [result])\r\n\r\n\r\n    /**\r\n     * Check if the returned use already exist\r\n     */\r\n    function checkUser() {\r\n        props.getUserAction(response => {\r\n            response.users.map(item => {\r\n                if (item.id === result.id) {\r\n                    setAction('Already added')\r\n                    return true\r\n                }\r\n                else {\r\n                    setAction('Add User')\r\n                    return false\r\n                }\r\n            })\r\n        })\r\n    }\r\n\r\n    /**\r\n     * Store the user into localstorage\r\n     */\r\n    const storeUser = async (user) => {\r\n        props.getUserAction(response => {\r\n            const users = response.users\r\n            if (users.length === 0 || users.length > 0) {\r\n                props.storeUserAction(user, users, response => {\r\n                    if (response.success === true) {\r\n                        setMessage(response.message);\r\n                        checkUser()\r\n                        setAlertType('success')\r\n                        setIconType(\"far fa-check-circle\")\r\n                        setTimeout(() => setMessage(''), 3500);\r\n                    }\r\n                    else {\r\n                        setMessage(response.message);\r\n                        checkUser()\r\n                        setAlertType('info')\r\n                        setIconType(\"fas fa-info-circle\")\r\n                        setTimeout(() => setMessage(''), 3500);\r\n                    }\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {message && <Modal iconType={iconType} message={message} alertType={alertType} />}\r\n            <Card className=\"mt-5 user-box\">\r\n                <div>\r\n                    <Image src={result.avatar_url} roundedCircle />\r\n                    <Card.Title>Name: {result.name === null ? 'Name not  defined' : result.name}</Card.Title>\r\n                    <Card.Title>Repositries: {result.public_repos}</Card.Title>\r\n                    {action === 'Add User' ? <Button type=\"button\" variant=\"primary\" onClick={() => storeUser(result)}>{action}</Button> : <Button type=\"button\" variant=\"secondary\" disabled style={{ pointerEvents: 'none' }}>{action}</Button>}\r\n                </div>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    const { users } = state.getUserReducer\r\n    const { user } = state.storeUserReducer\r\n    return {\r\n        users,\r\n        user\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => bindActionCreators({ getUserAction, storeUserAction }, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchResult)","D:\\My Project\\github-profile\\src\\Components\\Modal\\Modal.js",[],"D:\\My Project\\github-profile\\src\\Reducer\\GetUserReducer.js",["44"],"D:\\My Project\\github-profile\\src\\Action\\ActionTypes.js",[],"D:\\My Project\\github-profile\\src\\Action\\GetUserAction.js",[],"D:\\My Project\\github-profile\\src\\Components\\Search\\Search.js",[],{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","severity":1,"message":"50","line":19,"column":8,"nodeType":"51","endLine":19,"endColumn":10,"suggestions":"52"},{"ruleId":"49","severity":1,"message":"53","line":24,"column":8,"nodeType":"51","endLine":24,"endColumn":16,"suggestions":"54"},{"ruleId":"55","severity":1,"message":"56","line":1,"column":19,"nodeType":"57","messageId":"58","endLine":1,"endColumn":31},"no-native-reassign",["59"],"no-negated-in-lhs",["60"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'users'. Either include it or remove the dependency array.","ArrayExpression",["61"],"React Hook useEffect has a missing dependency: 'checkUser'. Either include it or remove the dependency array.",["62"],"no-unused-vars","'REQUEST_USER' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation",{"desc":"63","fix":"64"},{"desc":"65","fix":"66"},"Update the dependencies array to be: [users]",{"range":"67","text":"68"},"Update the dependencies array to be: [checkUser, result]",{"range":"69","text":"70"},[631,633],"[users]",[740,748],"[checkUser, result]"]