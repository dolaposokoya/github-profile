[{"/home/dolexy/Desktop/myprojects/github-profile/src/index.js":"1","/home/dolexy/Desktop/myprojects/github-profile/src/Components/App.js":"2","/home/dolexy/Desktop/myprojects/github-profile/src/Components/Search/Search.js":"3","/home/dolexy/Desktop/myprojects/github-profile/src/Components/SearchResult/SearchResult.js":"4","/home/dolexy/Desktop/myprojects/github-profile/src/Components/UserView/UserView.js":"5","/home/dolexy/Desktop/myprojects/github-profile/src/Components/Modal/Modal.js":"6","/home/dolexy/Desktop/myprojects/github-profile/src/Action/GetUserAction.js":"7","/home/dolexy/Desktop/myprojects/github-profile/src/Reducer/GetUserReducer.js":"8","/home/dolexy/Desktop/myprojects/github-profile/src/Action/ActionTypes.js":"9"},{"size":296,"mtime":1608926276304,"results":"10","hashOfConfig":"11"},{"size":707,"mtime":1608901695647,"results":"12","hashOfConfig":"11"},{"size":4889,"mtime":1608910686748,"results":"13","hashOfConfig":"11"},{"size":3020,"mtime":1609075087100,"results":"14","hashOfConfig":"11"},{"size":2799,"mtime":1608910660838,"results":"15","hashOfConfig":"11"},{"size":333,"mtime":1608907976277,"results":"16","hashOfConfig":"11"},{"size":700,"mtime":1609073508454,"results":"17","hashOfConfig":"11"},{"size":557,"mtime":1609073442484,"results":"18","hashOfConfig":"11"},{"size":243,"mtime":1608923025654,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1w32rh6",{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/dolexy/Desktop/myprojects/github-profile/src/index.js",[],"/home/dolexy/Desktop/myprojects/github-profile/src/Components/App.js",[],["41","42"],"/home/dolexy/Desktop/myprojects/github-profile/src/Components/Search/Search.js",[],"/home/dolexy/Desktop/myprojects/github-profile/src/Components/SearchResult/SearchResult.js",["43"],"/home/dolexy/Desktop/myprojects/github-profile/src/Components/UserView/UserView.js",["44","45","46"],"import React, { useEffect, useState } from 'react';\nimport { Card, Button, Image } from 'react-bootstrap'\nimport Modal from \"../Modal/Modal\";\nexport default function UserView(props) {\n\n    const { resourceType, userDeatils } = props\n\n\n    const [repo, setRepo] = useState([])\n    const [iconType, setIconType] = useState('')\n    const [alertType, setAlertType] = useState('')\n    const [message, setMessage] = useState('')\n\n    useEffect(() => {\n        users()\n    }, [message])\n\n    const users = () => {\n        const users = props.getUsers()\n        setRepo(users)\n    }\n\n    const deleteUser = (id) => {\n        const users = props.getUsers()\n        users.forEach((user, index) => {\n            if (user.id === id) {\n                users.splice(index, 1)\n            }\n        })\n        localStorage.setItem('users', JSON.stringify(users))\n        setMessage('User Deleted');\n        setAlertType('success')\n        setIconType(\"far fa-check-circle\")\n        setTimeout(() => setMessage(''), 5000);\n    }\n\n\n    return (\n        <div>\n            {message && <Modal iconType={iconType} message={message} alertType={alertType} />}\n            {repo && repo.map((item, index) => {\n                return (\n                    <Card className=\"mb-2\" key={index} style={{ maxWidth: '600px' }}>\n                        <Card.Body>\n                            <div className=\"d-flex justify-content-between\">\n                                <div>\n                                    <Card.Title className=\"mb-5\">Repository of <span className=\"text-muted fonwt-weight-light\">{item.name === null ? 'Name not defined' : item.name}</span></Card.Title>\n                                </div>\n                                <Image roundedCircle src={item.avatar_url} style={{ width: '55px', height: '55px' }} />\n                            </div>\n                            {item.repository && item.repository.map((item, index) => {\n                                index += 1\n                                return (\n                                    <div key={index}>\n                                        <Card.Subtitle className=\"mt-2 mb-2\"><i className=\"fas fa-folder-open\"></i> <span className=\"text-muted font-weight-light\">{item.name === null ? 'No repository found' : item.name}</span></Card.Subtitle>\n                                        <hr></hr>\n                                    </div>\n                                )\n                            })}\n                            <Card.Text className=\"mt-4\">\n                                <Button variant=\"danger\" onClick={() => deleteUser(item.id)}>Delete</Button>\n                            </Card.Text>\n                        </Card.Body>\n                    </Card>\n                )\n            })}\n        </div>\n    )\n}\n","/home/dolexy/Desktop/myprojects/github-profile/src/Components/Modal/Modal.js",[],["47","48"],"/home/dolexy/Desktop/myprojects/github-profile/src/Action/GetUserAction.js",[],"/home/dolexy/Desktop/myprojects/github-profile/src/Reducer/GetUserReducer.js",[],"/home/dolexy/Desktop/myprojects/github-profile/src/Action/ActionTypes.js",[],{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","severity":1,"message":"54","line":20,"column":8,"nodeType":"55","endLine":20,"endColumn":16,"suggestions":"56"},{"ruleId":"57","severity":1,"message":"58","line":6,"column":13,"nodeType":"59","messageId":"60","endLine":6,"endColumn":25},{"ruleId":"57","severity":1,"message":"61","line":6,"column":27,"nodeType":"59","messageId":"60","endLine":6,"endColumn":38},{"ruleId":"53","severity":1,"message":"62","line":16,"column":8,"nodeType":"55","endLine":16,"endColumn":17,"suggestions":"63"},{"ruleId":"49","replacedBy":"64"},{"ruleId":"51","replacedBy":"65"},"no-native-reassign",["66"],"no-negated-in-lhs",["67"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'checkUser'. Either include it or remove the dependency array.","ArrayExpression",["68"],"no-unused-vars","'resourceType' is assigned a value but never used.","Identifier","unusedVar","'userDeatils' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'users'. Either include it or remove the dependency array.",["69"],["66"],["67"],"no-global-assign","no-unsafe-negation",{"desc":"70","fix":"71"},{"desc":"72","fix":"73"},"Update the dependencies array to be: [checkUser, result]",{"range":"74","text":"75"},"Update the dependencies array to be: [message, users]",{"range":"76","text":"77"},[533,541],"[checkUser, result]",[469,478],"[message, users]"]